//
  // [
  //   [0 K 0 K 0 0 0 0] 1, 0
  //   [0 0 Q 0 0 0 0 0] 2, 1
  //   [0 0 0 0 0 0 0 K]
  //   [0 0 0 0 0 0 K 0]
  //   [0 0 0 0 0 K 0 0]
  //   [0 0 0 0 K 0 0 0] // Odd Y && Odd X
  //   [0 0 0 Q 0 0 0 0] // Get the Index of Q, then check if the length of the array Q is  == 2 && can't be in the same index
  //   [0 0 K 0 0 0 0 0] 
  // ]
  //  (queenX - chessX) + (queenx - chessY)
  // K [7, 2] odd x even y (3 - 7 == -4 && 3 - 2 = 1 === -3)
  // K [6, 3] even x odd y (3 - 6 == -3 && 3 - 3 == 0 === -3
  // K [5, 4] odd x even y (3 - 5 == -2 && 3 - 4 == -1 === -3)
  // K [4, 5] even x odd y (3 - 4 == -1 && 3 - 5 == -2  === -3)
  // Q [3, 6] odd x even y
  // K [2, 7] even x odd y (3 - 2 == 1 && 3 - 7 = -4 == -3)
  // [+1, -1] ---> Left to Right Diagonal
  // [-1, +1] ---> Right to Left Diagonal